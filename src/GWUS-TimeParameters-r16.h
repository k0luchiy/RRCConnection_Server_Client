/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -S /home/koluchiy/fork_asn1c/skeletons -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_GWUS_TimeParameters_r16_H_
#define	_GWUS_TimeParameters_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum GWUS_TimeParameters_r16__maxDurationFactor_r16 {
	GWUS_TimeParameters_r16__maxDurationFactor_r16_one32th	= 0,
	GWUS_TimeParameters_r16__maxDurationFactor_r16_one16th	= 1,
	GWUS_TimeParameters_r16__maxDurationFactor_r16_one8th	= 2,
	GWUS_TimeParameters_r16__maxDurationFactor_r16_one4th	= 3
} e_GWUS_TimeParameters_r16__maxDurationFactor_r16;
typedef enum GWUS_TimeParameters_r16__numPOs_r16 {
	GWUS_TimeParameters_r16__numPOs_r16_n1	= 0,
	GWUS_TimeParameters_r16__numPOs_r16_n2	= 1,
	GWUS_TimeParameters_r16__numPOs_r16_n4	= 2,
	GWUS_TimeParameters_r16__numPOs_r16_spare1	= 3
} e_GWUS_TimeParameters_r16__numPOs_r16;
typedef enum GWUS_TimeParameters_r16__timeOffsetDRX_r16 {
	GWUS_TimeParameters_r16__timeOffsetDRX_r16_ms40	= 0,
	GWUS_TimeParameters_r16__timeOffsetDRX_r16_ms80	= 1,
	GWUS_TimeParameters_r16__timeOffsetDRX_r16_ms160	= 2,
	GWUS_TimeParameters_r16__timeOffsetDRX_r16_ms240	= 3
} e_GWUS_TimeParameters_r16__timeOffsetDRX_r16;
typedef enum GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16 {
	GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16_ms40	= 0,
	GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16_ms80	= 1,
	GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16_ms160	= 2,
	GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16_ms240	= 3
} e_GWUS_TimeParameters_r16__timeOffset_eDRX_Short_r16;
typedef enum GWUS_TimeParameters_r16__timeOffset_eDRX_Long_r16 {
	GWUS_TimeParameters_r16__timeOffset_eDRX_Long_r16_ms1000	= 0,
	GWUS_TimeParameters_r16__timeOffset_eDRX_Long_r16_ms2000	= 1
} e_GWUS_TimeParameters_r16__timeOffset_eDRX_Long_r16;
typedef enum GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16 {
	GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16_n1	= 0,
	GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16_n2	= 1,
	GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16_n4	= 2,
	GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16_n8	= 3
} e_GWUS_TimeParameters_r16__numDRX_CyclesRelaxed_r16;
typedef enum GWUS_TimeParameters_r16__powerBoost_r16 {
	GWUS_TimeParameters_r16__powerBoost_r16_dB0	= 0,
	GWUS_TimeParameters_r16__powerBoost_r16_dB1dot8	= 1,
	GWUS_TimeParameters_r16__powerBoost_r16_dB3	= 2,
	GWUS_TimeParameters_r16__powerBoost_r16_dB4dot8	= 3
} e_GWUS_TimeParameters_r16__powerBoost_r16;

/* GWUS-TimeParameters-r16 */
typedef struct GWUS_TimeParameters_r16 {
	long	 maxDurationFactor_r16;
	long	 numPOs_r16;	/* DEFAULT 0 */
	long	 timeOffsetDRX_r16;
	long	 timeOffset_eDRX_Short_r16;
	long	*timeOffset_eDRX_Long_r16;	/* OPTIONAL */
	long	*numDRX_CyclesRelaxed_r16;	/* OPTIONAL */
	long	*powerBoost_r16;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} GWUS_TimeParameters_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_maxDurationFactor_r16_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_numPOs_r16_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_timeOffsetDRX_r16_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_timeOffset_eDRX_Short_r16_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_timeOffset_eDRX_Long_r16_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_numDRX_CyclesRelaxed_r16_25;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_powerBoost_r16_30;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_GWUS_TimeParameters_r16;
extern asn_SEQUENCE_specifics_t asn_SPC_GWUS_TimeParameters_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_GWUS_TimeParameters_r16_1[7];

#ifdef __cplusplus
}
#endif

#endif	/* _GWUS_TimeParameters_r16_H_ */
#include <asn_internal.h>
