/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -S /home/koluchiy/fork_asn1c/skeletons -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_SlotOrSubslotPUSCH_Config_r15_H_
#define	_SlotOrSubslotPUSCH_Config_r15_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <NativeInteger.h>
#include <BOOLEAN.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SlotOrSubslotPUSCH_Config_r15_PR {
	SlotOrSubslotPUSCH_Config_r15_PR_NOTHING,	/* No components present */
	SlotOrSubslotPUSCH_Config_r15_PR_release,
	SlotOrSubslotPUSCH_Config_r15_PR_setup
} SlotOrSubslotPUSCH_Config_r15_PR;

/* Forward declarations */
struct Enable256QAM_r14;

/* SlotOrSubslotPUSCH-Config-r15 */
typedef struct SlotOrSubslotPUSCH_Config_r15 {
	SlotOrSubslotPUSCH_Config_r15_PR present;
	union SlotOrSubslotPUSCH_Config_r15_u {
		NULL_t	 release;
		struct SlotOrSubslotPUSCH_Config_r15__setup {
			long	*betaOffsetSlot_ACK_Index_r15;	/* OPTIONAL */
			long	*betaOffset2Slot_ACK_Index_r15;	/* OPTIONAL */
			struct SlotOrSubslotPUSCH_Config_r15__setup__betaOffsetSubslot_ACK_Index_r15 {
				A_SEQUENCE_OF(long) list;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *betaOffsetSubslot_ACK_Index_r15;
			struct SlotOrSubslotPUSCH_Config_r15__setup__betaOffset2Subslot_ACK_Index_r15 {
				A_SEQUENCE_OF(long) list;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *betaOffset2Subslot_ACK_Index_r15;
			long	*betaOffsetSlot_RI_Index_r15;	/* OPTIONAL */
			struct SlotOrSubslotPUSCH_Config_r15__setup__betaOffsetSubslot_RI_Index_r15 {
				A_SEQUENCE_OF(long) list;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *betaOffsetSubslot_RI_Index_r15;
			long	*betaOffsetSlot_CQI_Index_r15;	/* OPTIONAL */
			long	*betaOffsetSubslot_CQI_Index_r15;	/* OPTIONAL */
			struct Enable256QAM_r14	*enable256QAM_SlotOrSubslot_r15;	/* OPTIONAL */
			long	*resourceAllocationOffset_r15;	/* OPTIONAL */
			BOOLEAN_t	 ul_DMRS_IFDMA_SlotOrSubslot_r15;
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} setup;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SlotOrSubslotPUSCH_Config_r15_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SlotOrSubslotPUSCH_Config_r15;
extern asn_CHOICE_specifics_t asn_SPC_SlotOrSubslotPUSCH_Config_r15_specs_1;
extern asn_TYPE_member_t asn_MBR_SlotOrSubslotPUSCH_Config_r15_1[2];
extern asn_per_constraints_t asn_PER_type_SlotOrSubslotPUSCH_Config_r15_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _SlotOrSubslotPUSCH_Config_r15_H_ */
#include <asn_internal.h>
