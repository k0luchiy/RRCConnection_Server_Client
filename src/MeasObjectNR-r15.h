/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -S /home/koluchiy/fork_asn1c/skeletons -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_MeasObjectNR_r15_H_
#define	_MeasObjectNR_r15_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ARFCN-ValueNR-r15.h"
#include "RS-ConfigSSB-NR-r15.h"
#include "MaxRS-IndexCellQualNR-r15.h"
#include "Q-OffsetRangeInterRAT.h"
#include <NativeInteger.h>
#include "PhysCellIdNR-r15.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <BOOLEAN.h>
#include <NULL.h>
#include "FreqBandIndicatorNR-r15.h"
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>
#include "RMTC-ConfigNR-r16.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasObjectNR_r15__ext1__bandNR_r15_PR {
	MeasObjectNR_r15__ext1__bandNR_r15_PR_NOTHING,	/* No components present */
	MeasObjectNR_r15__ext1__bandNR_r15_PR_release,
	MeasObjectNR_r15__ext1__bandNR_r15_PR_setup
} MeasObjectNR_r15__ext1__bandNR_r15_PR;
typedef enum MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR {
	MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR_NOTHING,	/* No components present */
	MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR_release,
	MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR_setup
} MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR;

/* Forward declarations */
struct ThresholdListNR_r15;
struct CellIndexList;
struct CellsToAddModListNR_r15;
struct SS_RSSI_Measurement_r15;
struct CellsToAddModListNR_r16;

/* MeasObjectNR-r15 */
typedef struct MeasObjectNR_r15 {
	ARFCN_ValueNR_r15_t	 carrierFreq_r15;
	RS_ConfigSSB_NR_r15_t	 rs_ConfigSSB_r15;
	struct ThresholdListNR_r15	*threshRS_Index_r15;	/* OPTIONAL */
	MaxRS_IndexCellQualNR_r15_t	*maxRS_IndexCellQual_r15;	/* OPTIONAL */
	Q_OffsetRangeInterRAT_t	 offsetFreq_r15;	/* DEFAULT 0 */
	struct CellIndexList	*excludedCellsToRemoveList_r15;	/* OPTIONAL */
	struct CellsToAddModListNR_r15	*excludedCellsToAddModList_r15;	/* OPTIONAL */
	long	 quantityConfigSet_r15;
	struct MeasObjectNR_r15__cellsForWhichToReportSFTD_r15 {
		A_SEQUENCE_OF(PhysCellIdNR_r15_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *cellsForWhichToReportSFTD_r15;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct MeasObjectNR_r15__ext1 {
		PhysCellIdNR_r15_t	*cellForWhichToReportCGI_r15;	/* OPTIONAL */
		BOOLEAN_t	*deriveSSB_IndexFromCell_r15;	/* OPTIONAL */
		struct SS_RSSI_Measurement_r15	*ss_RSSI_Measurement_r15;	/* OPTIONAL */
		struct MeasObjectNR_r15__ext1__bandNR_r15 {
			MeasObjectNR_r15__ext1__bandNR_r15_PR present;
			union MeasObjectNR_r15__ext1__bandNR_r15_u {
				NULL_t	 release;
				FreqBandIndicatorNR_r15_t	 setup;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *bandNR_r15;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct MeasObjectNR_r15__ext2 {
		struct MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16 {
			MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_PR present;
			union MeasObjectNR_r15__ext2__rmtc_ConfigNR_r16_u {
				NULL_t	 release;
				RMTC_ConfigNR_r16_t	 setup;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *rmtc_ConfigNR_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct MeasObjectNR_r15__ext3 {
		struct CellIndexList	*cellsToRemoveList_r16;	/* OPTIONAL */
		struct CellsToAddModListNR_r16	*cellsToAddModList_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasObjectNR_r15_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MeasObjectNR_r15;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasObjectNR_r15_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasObjectNR_r15_1[12];

#ifdef __cplusplus
}
#endif

#endif	/* _MeasObjectNR_r15_H_ */
#include <asn_internal.h>
