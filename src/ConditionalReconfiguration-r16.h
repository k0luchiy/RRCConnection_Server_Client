/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -S /home/koluchiy/fork_asn1c/skeletons -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_ConditionalReconfiguration_r16_H_
#define	_ConditionalReconfiguration_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ConditionalReconfiguration_r16__attemptCondReconf_r16 {
	ConditionalReconfiguration_r16__attemptCondReconf_r16_true	= 0
} e_ConditionalReconfiguration_r16__attemptCondReconf_r16;

/* Forward declarations */
struct CondReconfigurationToAddModList_r16;
struct CondReconfigurationToRemoveList_r16;

/* ConditionalReconfiguration-r16 */
typedef struct ConditionalReconfiguration_r16 {
	struct CondReconfigurationToAddModList_r16	*condReconfigurationToAddModList_r16;	/* OPTIONAL */
	struct CondReconfigurationToRemoveList_r16	*condReconfigurationToRemoveList_r16;	/* OPTIONAL */
	long	*attemptCondReconf_r16;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ConditionalReconfiguration_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_attemptCondReconf_r16_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ConditionalReconfiguration_r16;
extern asn_SEQUENCE_specifics_t asn_SPC_ConditionalReconfiguration_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_ConditionalReconfiguration_r16_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _ConditionalReconfiguration_r16_H_ */
#include <asn_internal.h>
