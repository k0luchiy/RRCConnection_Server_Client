/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -S /home/koluchiy/fork_asn1c/skeletons -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_SRB_ToAddMod_H_
#define	_SRB_ToAddMod_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include "RLC-Config.h"
#include <NULL.h>
#include <constr_CHOICE.h>
#include "LogicalChannelConfig.h"
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SRB_ToAddMod__rlc_Config_PR {
	SRB_ToAddMod__rlc_Config_PR_NOTHING,	/* No components present */
	SRB_ToAddMod__rlc_Config_PR_explicitValue,
	SRB_ToAddMod__rlc_Config_PR_defaultValue
} SRB_ToAddMod__rlc_Config_PR;
typedef enum SRB_ToAddMod__logicalChannelConfig_PR {
	SRB_ToAddMod__logicalChannelConfig_PR_NOTHING,	/* No components present */
	SRB_ToAddMod__logicalChannelConfig_PR_explicitValue,
	SRB_ToAddMod__logicalChannelConfig_PR_defaultValue
} SRB_ToAddMod__logicalChannelConfig_PR;
typedef enum SRB_ToAddMod__ext1__pdcp_verChange_r15 {
	SRB_ToAddMod__ext1__pdcp_verChange_r15_true	= 0
} e_SRB_ToAddMod__ext1__pdcp_verChange_r15;

/* Forward declarations */
struct RLC_Config_v1530;
struct RLC_BearerConfig_r15;
struct RLC_Config_v1510;
struct RLC_Config_v1700;

/* SRB-ToAddMod */
typedef struct SRB_ToAddMod {
	long	 srb_Identity;
	struct SRB_ToAddMod__rlc_Config {
		SRB_ToAddMod__rlc_Config_PR present;
		union SRB_ToAddMod__rlc_Config_u {
			RLC_Config_t	 explicitValue;
			NULL_t	 defaultValue;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rlc_Config;
	struct SRB_ToAddMod__logicalChannelConfig {
		SRB_ToAddMod__logicalChannelConfig_PR present;
		union SRB_ToAddMod__logicalChannelConfig_u {
			LogicalChannelConfig_t	 explicitValue;
			NULL_t	 defaultValue;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *logicalChannelConfig;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct SRB_ToAddMod__ext1 {
		long	*pdcp_verChange_r15;	/* OPTIONAL */
		struct RLC_Config_v1530	*rlc_Config_v1530;	/* OPTIONAL */
		struct RLC_BearerConfig_r15	*rlc_BearerConfigSecondary_r15;	/* OPTIONAL */
		long	*srb_Identity_v1530;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct SRB_ToAddMod__ext2 {
		struct RLC_Config_v1510	*rlc_Config_v1560;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct SRB_ToAddMod__ext3 {
		struct RLC_Config_v1700	*rlc_Config_v1700;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SRB_ToAddMod_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_pdcp_verChange_r15_11;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_SRB_ToAddMod;
extern asn_SEQUENCE_specifics_t asn_SPC_SRB_ToAddMod_specs_1;
extern asn_TYPE_member_t asn_MBR_SRB_ToAddMod_1[6];

#ifdef __cplusplus
}
#endif

#endif	/* _SRB_ToAddMod_H_ */
#include <asn_internal.h>
